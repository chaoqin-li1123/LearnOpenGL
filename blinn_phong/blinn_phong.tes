#version 450 core

layout (triangles, fractional_even_spacing, ccw) in;

in TCS_OUT
{
    in vec3 vertex_position_camera_space;
    in vec2 uv;
    in vec3 normal_camera_space;
} tes_in[];

out TES_OUT
{
    out vec3 vertex_position_camera_space;
    out vec2 uv;
    out vec3 normal_camera_space;
} tes_out;

void pass_data() {
    tes_out.vertex_position_camera_space = gl_TessCoord.x * tes_in[0].vertex_position_camera_space
     + gl_TessCoord.y * tes_in[1].vertex_position_camera_space 
     + gl_TessCoord.z * tes_in[2].vertex_position_camera_space; 
    tes_out.uv = gl_TessCoord.x * tes_in[0].uv
     + gl_TessCoord.y * tes_in[1].uv 
     + gl_TessCoord.z * tes_in[2].uv; 
    tes_out.normal_camera_space = gl_TessCoord.x * tes_in[0].normal_camera_space
     + gl_TessCoord.y * tes_in[1].normal_camera_space
     + gl_TessCoord.z * tes_in[2].normal_camera_space;         
    gl_ClipDistance[0] = tes_out.vertex_position_camera_space.y;
}

void main() {
    gl_Position = gl_TessCoord.x * gl_in[0].gl_Position + gl_TessCoord.y * gl_in[1].gl_Position + gl_TessCoord.z * gl_in[2].gl_Position; 
    pass_data();
}